<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>