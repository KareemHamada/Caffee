<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        lAAAAABJRU5ErkJggg==
</value>
  </data>
</root>